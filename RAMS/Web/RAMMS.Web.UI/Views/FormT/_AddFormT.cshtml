@using RAMMS.DTO.RequestBO;
@using RAMMS.Business.ServiceProvider;
@inject RAMMS.Business.ServiceProvider.Interfaces.IUserService usr

@inject RAMMS.Business.ServiceProvider.Interfaces.IDDLookUpService ddlService
@model RAMMS.Web.UI.Models.FormF1Model;
@inject RAMMS.Business.ServiceProvider.Interfaces.ISecurity security;
@{
    //ViewBag.TabTitle = "ASSET MAINTANENCE - Form N1 - Road Asset Management and Maintenance System";
    //ViewData["Title"] = "ASSET MAINTANENCE - Form N1 - Road Asset Management and Maintenance System";
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
    IEnumerable<SelectListItem> division = (await ddlService
       .GetLookups(new DDLookUpDTO { Type = "Division" }))
       .Select(s => new SelectListItem
       {
           Text = s.DdlTypeDesc,
           Value = s.DdlTypeValue
       }).ToArray();

    
    IEnumerable<SelectListItem> section = (await ddlService
       .GetLookups(new DDLookUpDTO { Type = "Section Code" }))
       .Select(s => new SelectListItem
       {
           Text = s.DdlTypeCode + "-" + s.DdlTypeDesc,
           Value = s.DdlTypeCode
       }).ToArray();

    IEnumerable<SelectListItem> roadcode = new[] {new SelectListItem
       {
           Text = "Select Road Code",
           Value = ""
       } };

    IEnumerable<SelectListItem> rmu = (await ddlService
       .GetLookups(new DDLookUpDTO { Type = "RMU" }))
       .Select(s => new SelectListItem
       {
           Text = s.DdlTypeCode + "-" + s.DdlTypeDesc,
           Value = s.DdlTypeCode
       }).ToArray();

    IEnumerable<SelectListItem>
    user = (await usr.GetUserNameRespectToPosition(new UserRequestDTO
    {
        Position = "Supervisor"
    })).ToList().Select(s => new SelectListItem { Value = s.UserId.ToString(), Text = (s.UserId.ToString() + "-" + s.UserName) }).ToArray();

    bool isSubmit = (security.isOperRAMSExecutive || security.IsExecutive || security.isEnggAssistant || security.IsSupervisor);
    bool IsApproved = (security.isOperRAMSExecutive || security.IsExecutive || security.IsHeadMaintenance || security.IsRegionManager);
    var groupname = security.Group.IndexOf(",") >= 0 ? security.Group.Split(',')[0] : security.Group;


}


<script type="text/javascript" src="~/js/MAMFormF1.js" asp-append-version="true"></script>

@using (Html.BeginForm())
{

    <div class="row">
        <div class="w-100 bg-body" id="">
            <div id="headerDiv">
                <div class="modal-body mh-120 pt-0 pb-0">
                    <div class="d-flex justify-content-center pt-3 pb-3">
                        <div id="" class="form-group mb-0">
                            @Html.Label("Form F1 No.", "Form F1 No.", new { style = "float:left; padding: .5rem .5rem 0 !important;" })
                            @Html.TextBoxFor(model => model.FormF1.PkRefId, new { @readonly = "true", @class = "form-control", @style = "width:300px;" })
                        </div>
                    </div>
                    <div class="clear-b"></div>
                    <div class="bg-white rounded pt-3 pb-1 px-lg-3 px-md-2 landing-division w-100 mb-3">
                        <div class="row">
                            <div class="col-lg-10 p-0">
                                <div id="headerFindDiv" class="w-100 form-group mb-0">
                                    @*<div class="form-group col-md-3">
                                        @Html.Label("Asset Group", "Asset Group")
                                        <input class="form-control" value="Guardrail" disabled />
                                        </div>*@
                                    <div class="form-group col-md-3">
                                        @Html.Label("Division", "Division")
                                        @Html.DropDownListFor(m => m.FormF1.DivCode, division, "Select Division", new { @Id = "ddlDivision", @class = "form-control" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("District", "District")
                                        @*<input id="txtDist" class="form-control" value="@Model.FormF1.Dist" />*@
                                        @Html.TextBoxFor(model => model.FormF1.Dist, new { @class = "form-control" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("RMU", "RMU")

                                        @Html.DropDownListFor(Ahdr => Ahdr.FormF1.RmuCode, rmu, "Select RMU", new { @Id = "ddlRMU", @class = "form-control validate {required, RMU}" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("Section Code", "Section Code")

                                        @Html.DropDownListFor(Ahdr => Ahdr.FormF1.SecCode, section, "Select Section Code", new { @Id = "ddlSection", @class = "form-control validate {required, Section Code}" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("Section Name", "Section Name")
                                        @Html.TextBoxFor(model => model.FormF1.SecName, new { @readonly = true, @class = "form-control" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("Road Code", "Road Code")
                                        @Html.DropDownListFor(Ahdr => Ahdr.FormF1.RdCode, roadcode, "Select RoadCode", new { @Id = "ddlRoadCode", @class = "form-control validate {required, Road Code}" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("Road Name", "Road Name")
                                        @*<input id="txtRoadName" disabled="disabled" type="text" class="form-control" />*@
                                        @Html.TextBoxFor(model => model.FormF1.RdName, new { @readonly = true, @class = "form-control" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("Road Length (km)", "Road Length (km)")
                                        @*<input id="txtRoadlength" disabled="disabled" type="text" value="@Model.FormF1.RoadLength" class="form-control" />*@
                                        @Html.TextBoxFor(model => model.FormF1.RoadLength, new { @readonly = true, @class = "form-control" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("Crew Leader", "Crew Leader")
                                        @Html.DropDownListFor(Ahdr => Ahdr.FormF1.CrewSup, (IEnumerable<SelectListItem>)ViewData["Supervisor"], "User Id", new { @Id = "ddlCrew", @class = "form-control validate {required, Crew Leader}" })
                                    </div>
                                    <div class="form-group col-md-3">
                                        @Html.Label("Crew Name", "Crew Name")
                                        @Html.TextBoxFor(model => model.FormF1.CrewName, new { @readonly = true, @class = "form-control" })
                                    </div>


                                    <div class="form-group col-md-3">
                                        @Html.Label("Year of Inspection (YYYY)", "Year of Inspection (YYYY)")
                                        @Html.DropDownListFor(Ahdr => Ahdr.FormF1.InspectedYear, year, "Select Year", new { @Id = "ddlYear", @class = "form-control validate {required, Year }" })
                                    </div>



                                </div>
                            </div>
                            <div class="form-group col-lg-2 col-md-12 pt-xl-4 px-md-4 px-sm-4">
                                <button id="btnFindDetails" type="button" onclick="Save('','')" class="btn btn-sm btn-themebtn col-md-12 col-xl-12 col-lg-2 mr-lg-1 float-right">Find Details</button>
                            </div>
                        </div>
                    </div>
                    <div class="clear-b"></div>
                    <div class="w-100 position-relative in-tbl-btns">
                        <div id="DetailListGrid" class="w-100 dt-tbl-section">
                            @{
                                Html.RenderPartial("_DetailGridList.cshtml");
                            }
                        </div>
                    </div>

                    <div id="F1UserDetail" class="col-lg-12 px-lg-5">

                        <div class="bg-white rounded landing-division w-100 float-left mb-0">
                            <div class="col-lg-12 py-2 px-4">
                                <span class="font-14 font-weight-bold">Inspected by</span>
                            </div>
                            <div class="border-top px-2 pt-3 pb-1 float-left w-100">
                                <div class="form-group col-lg-2 float-left">
                                    @Html.Label("User ID", "User ID")
                                    @Html.DropDownListFor(Ahdr => Ahdr.FormF1.InspectedBy, (IEnumerable<SelectListItem>)ViewData["User"], "User Id", new { @Id = "ddlInspectedby", @class = "form-control svalidate {required, Inspected by Id}" })

                                </div>
                                <div class="form-group col-lg-3 float-left">
                                    @Html.Label("Name", "Name")
                                    @*<input id="txtInspectedbyName" type="text" value="@Model.FormF1.UserNameInspBy" class="form-control svalidate {req,Inspected by User Name}" disabled />*@
                                    @Html.TextBoxFor(model => model.FormF1.InspectedName, new { @readonly = true, @class = "form-control" })
                                </div>
                                <div class="form-group col-lg-3 float-left">
                                    @Html.Label("Designation", "Designation")
                                    @Html.TextBoxFor(model => model.FormF1.InspectedDesg, new { @readonly = true, @class = "form-control" })
                                </div>
                                <div class="form-group col-lg-3 float-left">
                                    @Html.Label("Date of Inspection (DD-MM-YYYY)", "Date of Inspection (DD-MM-YYYY)")
                                    @Html.EditorFor(m => m.FormF1.InspectedDate, new { type = "date", htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>






                        @{
                            Html.RenderPartial("~/Views/Shared/_ProcessHistory.cshtml", new RAMMS.DTO.RequestBO.ProcessDTO
                            {
                                Form = "FormF1",
                                RefId = Model.FormF1.PkRefNo,
                                Stage = Model.FormF1.Status
                            });
                        }
                    </div>



                </div>
                <div class="modal-footer float-left w-100">
                    <button type="button" class="btn btn-sm btn-outline-theme" onclick="GoBack()">Cancel</button>
                    @{

                        if (isSubmit && (Model.FormF1.Status == null || Model.FormF1.Status == "" || Model.FormF1.Status == "Initialize" || Model.FormF1.Status == "Saved"))
                        {
                            <button id="saveFormF1Btn" type="button" class="btn btn-sm btn-themebtn" onclick="Save('','Saved')">Save</button>
                            <button id="SubmitFormF1Btn" type="button" class="btn btn-sm btn-themebtn" onclick="Save('','Submitted')">Submit</button>
                        }

                        if (IsApproved && (Model.FormF1.Status == RAMMS.Common.StatusList.Submitted || Model.FormF1.Status == RAMMS.Common.StatusList.Rejected))
                        {
                            <button type="button" class="btn btn-sm btn-themebtn enblmode" onclick="process.ShowApprove('@groupname','Verified By');"> Approved / Verify </button>
                        }

                    }
                </div>
            </div>




            <div id="myModal" class="modal fade" role="dialog">
                <div class="modal-dialog modal-dialog-centered modal-custom">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">

                            <h4 class="modal-title">
                                Edit Form F1 Details
                            </h4><button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body p-0">
                            <div class="mh-182 bg-white py-4">
                                <div id="AddDetailFormF2">
                                    <div class="col-lg-12 float-left">
                                        <div class="form-group col-lg-2">
                                            <label for="Starting_CHKm">Starting CH(Km)	</label>

                                            @Html.TextBoxFor(model => model.FormF1Dtl.LocCh, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Starting_CHKm">Starting CH(M)	</label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.LocChDeci, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Starting_CHM">
                                                Structure Code
                                            </label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.Code, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Structure_Code">Tier</label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.Tier, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Structure_Code">Total Length</label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.TotalLength, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Structure_Code">Top Width						</label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.TopWidth, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Structure_Code">Bottom Width						</label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.BottomWidth, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Structure_Code">Height</label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.Height, new { @readonly = true, @class = "form-control" })
                                        </div>
                                        <div class="form-group col-lg-2">
                                            <label for="Structure_Code">
                                                Overall Condition
                                            </label>
                                            @Html.TextBoxFor(model => model.FormF1Dtl.OverallCondition, new { @readonly = true, @class = "form-control" })
                                        </div>

                                        <div class="col-lg-12 form-group txtarea-80">
                                            <label for="Remarks">
                                                Description

                                            </label>
                                            @Html.TextAreaFor(m => m.FormF1Dtl.Description, new { @class = "form-control  svalidate {required,Description}" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-10 offset-md-1 col-lg-8 offset-lg-2 float-left mt-2">
                                    <div class="abbrevations-group p-2">
                                        <div class="w-100 text-left float-left mb-6 font-weight-bold" style="text-decoration:underline;">Abbrevations</div>
                                        <div class="w-100 d-flex flex-column flex-md-row">
                                            <div class="d-flex flex-column col-md-6 p-0 mb-2">
                                                <span>
                                                    <span class="font-weight-bold font-14 mr-1">
                                                        <span class="float-left" style="width:20px;">
                                                            R
                                                        </span>:
                                                    </span><span class="text-nowrap">
                                                        Reinforce Concrete Gravity/Cantilever Wall
                                                    </span>
                                                </span>
                                                <span>
                                                    <span class="font-weight-bold font-14 mr-1">
                                                        <span class="float-left" style="width:20px;">

                                                            M
                                                        </span>:
                                                    </span><span class="text-nowrap">
                                                        Crib/Bin - Steel/Metal or Sheetpile/H-Pile/Micro-Pile
                                                    </span>
                                                </span>
                                                <span>
                                                    <span class="font-weight-bold font-14 mr-1">
                                                        <span class="float-left" style="width:20px;">

                                                            G
                                                        </span>:
                                                    </span><span class="text-nowrap">
                                                        Masonry, Gabion, Mortared Stone/Brick

                                                    </span>
                                                </span>
                                                <span>
                                                    <span class="font-weight-bold font-14 mr-1">
                                                        <span class="float-left" style="width:20px;">
                                                            P
                                                        </span>:
                                                    </span><span class="text-nowrap">
                                                        Precast Panel, Crib Concrete, Reinforced Soil/Earth Wall
                                                    </span>
                                                </span>
                                                <span>
                                                    <span class="font-weight-bold font-14 mr-1">
                                                        <span class="float-left" style="width:20px;">
                                                            T
                                                        </span>:
                                                    </span><span class="text-nowrap">
                                                        Timber
                                                    </span>
                                                </span>
                                                <span>
                                                    <span class="font-weight-bold font-14 mr-1">
                                                        <span class="float-left" style="width:20px;">
                                                            N
                                                        </span>:
                                                    </span><span class="text-nowrap">
                                                        Soil Nail
                                                    </span>
                                                </span>
                                                <span>
                                                    <span class="font-weight-bold font-14 mr-1">
                                                        <span class="float-left" style="width:20px;">
                                                            O
                                                        </span>:
                                                    </span><span class="text-nowrap">
                                                        Other including Wrap/Geosynthetic/Secant Pile and etc
                                                    </span>
                                                </span>
                                            </div>
                                            <div class="d-flex flex-column mb-2">
                                                <span class="d-flex flex-row align-items-start">
                                                    <span class="font-weight-bold font-14 mr-3 float-left text-nowrap">Condition 1</span>
                                                    <span class="float-left" style="padding-top:2px">
                                                        The retaining wall is structurally sound.


                                                    </span>
                                                </span>
                                                <span class="d-flex flex-row align-items-start">
                                                    <span class="font-weight-bold font-14 mr-3 float-left text-nowrap">Condition 2</span>
                                                    <span class="float-left" style="padding-top:2px">
                                                        Drainage facilities need to be cleaned.

                                                    </span>
                                                </span>
                                                <span class="d-flex flex-row align-items-start">
                                                    <span class="font-weight-bold font-14 mr-3 float-left text-nowrap">Condition 3</span>
                                                    <span class="float-left" style="padding-top:2px">
                                                        Minor cracking in wall face or/and structure displacement that requires further investigation. Drainage facilities need to be repaired.
                                                    </span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="btnDCancel" type="button" class="btn btn-sm btn-outline-theme Cancel" data-dismiss="modal">Cancel</button>
                            <button id="btnSaveFormF1Dtl" type="button" onclick="SaveFormF1Dtl();" class="btn btn-sm btn-themebtn">Save &amp; Exit</button>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>


    @*Add F1 Details Modal*@

    @Html.HiddenFor(m => m.FormF1.PkRefNo)
    @Html.HiddenFor(m => m.FormF1Dtl.PkRefNo)
    @Html.HiddenFor(m => m.FormF1.DivCode)
    @Html.HiddenFor(m => m.FormF1.RmuCode)
    @Html.HiddenFor(m => m.FormF1.RdCode)
    @Html.HiddenFor(m => m.FormF1.SecCode)
    @Html.HiddenFor(m => m.FormF1.InspectedBy)
    @Html.HiddenFor(m => m.FormF1.Status)
    @Html.HiddenFor(m => m.FormF1.SubmitSts)
    @Html.HiddenFor(m => m.FormF1Dtl.AssetId)

    <input type="hidden" id="hdnSecCode" value="@Model.FormF1.SecCode" />
    <input type="hidden" id="hdnRdCode" value="@Model.FormF1.RdCode" />
    <input type="hidden" id="hdnView" value="@Model.view" />


}

<script>

    $(document).ready(function () {
        process.Init("FormF1", "@Model.FormF1.Status", @Model.FormF1.PkRefNo);

    });
    bindRoadCode();

    $('#ddlDivision').val("@Model.FormF1.DivCode");
    $('#ddlDivision').trigger('chosen:updated');
    $('#ddlDivision').trigger("change");

    $('#ddlRMU').val("@Model.FormF1.RmuCode");
    $('#ddlRMU').trigger('chosen:updated');
    $('#ddlRMU').trigger("change");

    $('#ddlSection').val("@Model.FormF1.SecCode");
    $('#ddlSection').trigger('chosen:updated');
    $('#ddlSection').trigger("change");

    $('#ddlRoadCode').val("@Model.FormF1.RdCode");
    $('#ddlRoadCode').trigger('chosen:updated');
    $('#ddlRoadCode').trigger("change");

    $('#ddlYear').val("@Model.FormF1.InspectedYear");
    $('#ddlYear').trigger('chosen:updated');
    $('#ddlYear').trigger("change");


    $('#ddlCrew').val("@Model.FormF1.CrewSup");
    $('#ddlCrew').trigger('chosen:updated');
    $('#ddlCrew').trigger("change");

    $('#ddlInspectedby').val("@Model.FormF1.InspectedBy");
    $('#ddlInspectedby').trigger('chosen:updated');
    $('#ddlInspectedby').trigger("change");
</script>
